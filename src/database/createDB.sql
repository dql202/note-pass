DROP DATABASE IF EXISTS NotePass;
CREATE DATABASE NotePass;
USE Notepass;

DROP TABLE IF EXISTS Schools;
CREATE TABLE Schools (
    SchoolID INT NOT NULL AUTO_INCREMENT,
    School VARCHAR(256) NOT NULL,
    PRIMARY KEY(SchoolID)
) ENGINE INNODB;


DROP TABLE IF EXISTS Users;
CREATE TABLE Users (
    UserID INT NOT NULL AUTO_INCREMENT,
    Username VARCHAR(256) NOT NULL,
    Email VARCHAR(256) NOT NULL,
    School VARCHAR(256) NOT NULL,
    PRIMARY KEY(UserID)
) ENGINE INNODB;


DROP TABLE IF EXISTS Passwords;
CREATE TABLE Passwords (
    UserID INT NOT NULL,
    Password VARCHAR(256) NOT NULL,
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    PRIMARY KEY(UserID)
) ENGINE INNODB;


DROP TABLE IF EXISTS Notes;
CREATE TABLE Notes (
    NoteID INT NOT NULL AUTO_INCREMENT,
    OwnerID INT NOT NULL,
    Public BOOLEAN NOT NULL,
    SchoolID INT NOT NULL,
    Professor VARCHAR(256) NOT NULL,
    Course VARCHAR(256) NOT NULL,
    Topic VARCHAR(256) NOT NULL,
    Time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Data blob NOT NULL,
    FOREIGN KEY (OwnerID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (SchoolID) REFERENCES Schools(SchoolID) ON DELETE CASCADE,
    PRIMARY KEY(NoteID)
) ENGINE INNODB;


DROP TABLE IF EXISTS Requests;
CREATE TABLE Requests (
    NoteID INT NOT NULL,
    RequesterID INT NOT NULL,
    OwnerID INT NOT NULL,
    FOREIGN KEY (NoteID) REFERENCES Notes(NoteID) ON DELETE CASCADE,
    FOREIGN KEY (RequesterID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (OwnerID) REFERENCES Users(UserID) ON DELETE CASCADE,
    PRIMARY KEY(NoteID, RequesterID, OwnerID)
) ENGINE INNODB;


DROP TABLE IF EXISTS Starred;
CREATE TABLE Starred (
    NoteID INT NOT NULL,
    UserID INT NOT NULL,
    FOREIGN KEY (NoteID) REFERENCES Notes(NoteID) ON DELETE CASCADE,
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    PRIMARY KEY(NoteID, UserID)
) ENGINE INNODB;


DROP TABLE IF EXISTS Comments;
CREATE TABLE Comments (
    CommentID INT NOT NULL AUTO_INCREMENT,
    ReplyID INT,
    NoteID INT NOT NULL,
    UserID INT NOT NULL,
    Time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    Message Text NOT NULL,
    Flagged BOOLEAN NOT NULL,
    FOREIGN KEY (NoteID) REFERENCES Notes(NoteID) ON DELETE CASCADE,
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (ReplyID) REFERENCES Comments(CommentID) ON DELETE CASCADE,
    PRIMARY KEY(CommentID)
) ENGINE INNODB;


DROP TABLE IF EXISTS Tags;
CREATE TABLE Tags (
    TagID INT NOT NULL AUTO_INCREMENT,
    tag VARCHAR(256) NOT NULL,
    PRIMARY KEY(TagID)
) ENGINE INNODB;


DROP TABLE IF EXISTS TagsOnNotes;
CREATE TABLE TagsOnNotes (
    NoteID INT NOT NULL,
    TagID INT NOT NULL,
    FOREIGN KEY (NoteID) REFERENCES Notes(NoteID) ON DELETE CASCADE,
    FOREIGN KEY (TagID) REFERENCES Tags(TagID) ON DELETE CASCADE,
    PRIMARY KEY(NoteID, TagID)
) ENGINE INNODB;


DROP TABLE IF EXISTS Permissions;
CREATE TABLE Permissions (
    PermissionID INT NOT NULL AUTO_INCREMENT,
    UserID INT NOT NULL,
    NoteID INT NOT NULL,
    FOREIGN KEY (NoteID) REFERENCES Notes(NoteID) ON DELETE CASCADE,
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    PRIMARY KEY(PermissionID, UserID, NoteID)
) ENGINE INNODB;


DROP TABLE IF EXISTS Professors;
CREATE TABLE Professors (
    ProfessorID INT NOT NULL AUTO_INCREMENT,
    Name VARCHAR(256) NOT NULL,
    PRIMARY KEY(ProfessorID, Name)
) ENGINE INNODB;


DROP TABLE IF EXISTS SchoolProfs;
CREATE TABLE SchoolProfs (
    ProfessorID INT NOT NULL,
    SchoolID INT NOT NULL,
    FOREIGN KEY (ProfessorID) REFERENCES Professors(ProfessorID) ON DELETE CASCADE,
    FOREIGN KEY (SchoolID) REFERENCES Schools(SchoolID) ON DELETE CASCADE,
    PRIMARY KEY(ProfessorID, SchoolID)
) ENGINE INNODB;